{"version":3,"sources":["components/Score.js","components/GameManager.js","game/Game.js","settings.js","dapp.js","components/HeaderBar.js","components/Actions.js","components/WindowDimensions.js","components/Competition.js","server/GameServer.js","components/SnackMsg.js","App.js","reportWebVitals.js","index.js"],"names":["Score","props","Grid","container","direction","justify","alignItems","style","height","item","Paper","paddingLeft","paddingRight","Typography","fontFamily","fontWeight","variant","score","visibility","delta","count","GameManager","seed","size","this","startTiles","setup","Board","rng","cells","build","Tile","position","value","id","x","y","previousPosition","mergedFrom","getInitialGameManager","prototype","Prando","grid","over","won","addStartTiles","i","addRandomTile","cellsAvailable","next","tile","randomAvailableCell","insertTile","prepareTiles","eachCell","savePosition","moveTile","cell","updatePosition","move","self","vector","getVector","traversals","buildTraversals","moved","forEach","cellContent","positions","findFarthestPosition","merged","removeTile","farthest","positionsEqual","movesAvailable","0","1","2","3","pos","push","reverse","previous","withinBounds","cellAvailable","tileMatchesAvailable","other","first","second","row","availableCells","length","Math","floor","callback","cellOccupied","GridContainer","class","className","positionClass","normalizePosition","Cell","addTile","elements","posClass","classes","join","mapkeys","up","down","right","left","getElements","gm","column","Game","gameManager","useRef","random","useState","current","setElements","msg","setMsg","width","xs","padding","handleKeys","onKeyEvent","key","e","d","newscore","setScore","handleKey","map","element","color","marginTop","Button","onClick","newSession","setSigned","top","opacity","zIndex","paddingTop","paddingBottom","Divider","contractAddress","constate","appName","React","wallet","tezos","accountPkh","setState","ready","Boolean","useEffect","ThanosWallet","onAvailabilityChange","available","connect","useCallback","network","opts","a","Error","tzs","toTezos","pkh","alert","message","v","DAppProvider","useWallet","useTezos","useAccountPkh","useReady","useConnect","HeaderBar","visible","useMediaQuery","dark","theme","palette","type","AppBar","boxShadow","Toolbar","textAlign","appTitle","disableElevation","handleConnect","Link","href","rel","underline","backgroundColor","iconMap","Actions","wrap","arrows","marginLeft","getWindowDimensions","window","innerWidth","innerHeight","Encrypt","accountAddress","signed","marginBottom","oracle","InMemorySigner","nonce","Uint8Array","crypto","getRandomValues","console","log","Tezos","setProvider","rpc","packData","data","prim","args","string","int","toString","then","wrappedPacked","hexScore","packed","sign","s","sbytes","sig","prefixSig","disabled","substring","status","at","contract","methods","submit","send","op","openSnack","receipt","closeSnack","loadRecords","catch","LeaderBoard","overflow","records","record","rank","marginRight","account","Competition","address","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","leaderBoardHeight","leaderBoardWidth","elevation","square","spacing","session","backgroundImage","backgroundRepeat","backgroundPosition","fontSize","LinearProgress","GameServer","seeds","Object","rngs","Number","MAX_SAFE_INTEGER","Promise","resolve","Alert","SnackMsg","Snackbar","open","severity","secondary","main","sortByScore","sort","b","PageRouter","setArrows","setSession","setRecords","setStatus","viewSnack","setViewSnack","GameServerRef","useMemo","createMuiTheme","light","contrastText","storage","cstorage","recs","submission","k","m","parseInt","_state","ThemeProvider","CssBaseline","App","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a03519ee.chunk.js","sourcesContent":["import { Grid, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Score = (props) => {\n  return (\n  <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={{ height: 150 }}>\n    <Grid item>\n\n  <Paper style={{ paddingLeft: 12, paddingRight: 12 }}>\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Grid item>\n        <Typography style={{\n          fontFamily: \"Clear Sans, Helvetica Neue, Arial, sans-serif\",\n          fontWeight: 700\n        }}>SCORE</Typography>\n      </Grid>\n      <Grid item>\n        <Typography variant='h4' style={{\n          fontFamily: \"Clear Sans, Helvetica Neue, Arial, sans-serif\",\n          fontWeight: 700\n        }}>\n          {props.score.score}\n        </Typography>\n      </Grid>\n    </Grid>\n  </Paper>\n  </Grid>\n  <Grid item>\n  <Typography variant='h6' style={{\n    fontFamily: \"Clear Sans, Helvetica Neue, Arial, sans-serif\",\n      fontWeight: 700,\n      visibility: (props.score.delta > 0)?'visible':'hidden'\n    }}>\n    +{props.score.delta}\n  </Typography>\n  </Grid>\n    </Grid>\n  )\n}\n\nexport default Score;","import Prando from 'prando';\n\nvar count = 0;\n\nexport function GameManager(seed,size) {\n  this.size         = size; // Size of the grid\n  this.startTiles   = 2;\n  this.setup(seed);\n}\n\n// Set up the game\nGameManager.prototype.setup = function (seed) {\n  this.rng          = new Prando(seed);\n  this.grid         = new Board(this.rng,this.size);\n\n  this.score        = 0;\n  this.over         = false;\n  this.won          = false;\n\n  // Add the initial tiles\n  this.addStartTiles();\n};\n\n// Set up the initial tiles to start the game with\nGameManager.prototype.addStartTiles = function () {\n  for (var i = 0; i < this.startTiles; i++) {\n    this.addRandomTile();\n  }\n};\n\n// Adds a tile in a random position\nGameManager.prototype.addRandomTile = function () {\n  if (this.grid.cellsAvailable()) {\n    var value = this.rng.next() < 0.9 ? 2 : 4;\n    var tile = new Tile(this.grid.randomAvailableCell(), value, count++);\n\n    this.grid.insertTile(tile);\n  }\n};\n\n// Save all tile positions and remove merger info\nGameManager.prototype.prepareTiles = function () {\n  this.grid.eachCell(function (x, y, tile) {\n    if (tile) {\n      tile.mergedFrom = null;\n      tile.savePosition();\n    }\n  });\n};\n\n// Move a tile and its representation\nGameManager.prototype.moveTile = function (tile, cell) {\n  this.grid.cells[tile.x][tile.y] = null;\n  this.grid.cells[cell.x][cell.y] = tile;\n  tile.updatePosition(cell);\n};\n\n// Move tiles on the grid in the specified direction\nGameManager.prototype.move = function (direction) {\n  // 0: up, 1: right, 2:down, 3: left\n  var self = this;\n\n  if (this.over || this.won) return; // Don't do anything if the game's over\n\n  var cell, tile;\n\n  var vector     = this.getVector(direction);\n  var traversals = this.buildTraversals(vector);\n  var moved      = false;\n\n  // Save the current tile positions and remove merger information\n  this.prepareTiles();\n\n  // Traverse the grid in the right direction and move tiles\n  traversals.x.forEach(function (x) {\n    traversals.y.forEach(function (y) {\n      cell = { x: x, y: y };\n      tile = self.grid.cellContent(cell);\n\n      if (tile) {\n        var positions = self.findFarthestPosition(cell, vector);\n        var next      = self.grid.cellContent(positions.next);\n\n        // Only one merger per row traversal?\n        if (next && next.value === tile.value && !next.mergedFrom) {\n          var merged = new Tile(positions.next, tile.value * 2, count++);\n          merged.mergedFrom = [tile, next];\n\n          self.grid.insertTile(merged);\n          self.grid.removeTile(tile);\n\n          // Converge the two tiles' positions\n          tile.updatePosition(positions.next);\n\n          // Update the score\n          self.score += merged.value;\n\n          // The mighty 2048 tile\n          if (merged.value === 2048) self.won = true;\n        } else {\n          self.moveTile(tile, positions.farthest);\n        }\n\n        if (!self.positionsEqual(cell, tile)) {\n          moved = true; // The tile moved from its original cell!\n        }\n      }\n    });\n  });\n\n  if (moved) {\n    this.addRandomTile();\n\n    if (!this.movesAvailable()) {\n      this.over = true; // Game over!\n    }\n\n    /* this.actuate(); */\n  }\n};\n\n// Get the vector representing the chosen direction\nGameManager.prototype.getVector = function (direction) {\n  // Vectors representing tile movement\n  var map = {\n    0: { x: 0,  y: -1 }, // up\n    1: { x: 1,  y: 0 },  // right\n    2: { x: 0,  y: 1 },  // down\n    3: { x: -1, y: 0 }   // left\n  };\n\n  return map[direction];\n};\n\n// Build a list of positions to traverse in the right order\nGameManager.prototype.buildTraversals = function (vector) {\n  var traversals = { x: [], y: [] };\n\n  for (var pos = 0; pos < this.size; pos++) {\n    traversals.x.push(pos);\n    traversals.y.push(pos);\n  }\n\n  // Always traverse from the farthest cell in the chosen direction\n  if (vector.x === 1) traversals.x = traversals.x.reverse();\n  if (vector.y === 1) traversals.y = traversals.y.reverse();\n\n  return traversals;\n};\n\nGameManager.prototype.findFarthestPosition = function (cell, vector) {\n  var previous;\n\n  // Progress towards the vector direction until an obstacle is found\n  do {\n    previous = cell;\n    cell     = { x: previous.x + vector.x, y: previous.y + vector.y };\n  } while (this.grid.withinBounds(cell) &&\n           this.grid.cellAvailable(cell));\n\n  return {\n    farthest: previous,\n    next: cell // Used to check if a merge is required\n  };\n};\n\nGameManager.prototype.movesAvailable = function () {\n  return this.grid.cellsAvailable() || this.tileMatchesAvailable();\n};\n\n// Check for available matches between tiles (more expensive check)\nGameManager.prototype.tileMatchesAvailable = function () {\n  var self = this;\n\n  var tile;\n\n  for (var x = 0; x < this.size; x++) {\n    for (var y = 0; y < this.size; y++) {\n      tile = this.grid.cellContent({ x: x, y: y });\n\n      if (tile) {\n        for (var direction = 0; direction < 4; direction++) {\n          var vector = self.getVector(direction);\n          var cell   = { x: x + vector.x, y: y + vector.y };\n\n          var other  = self.grid.cellContent(cell);\n          if (other) {\n          }\n\n          if (other && other.value === tile.value) {\n            return true; // These two tiles can be merged\n          }\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\nGameManager.prototype.positionsEqual = function (first, second) {\n  return first.x === second.x && first.y === second.y;\n};\n\nfunction Board(rng, size) {\n  this.rng  = rng;\n  this.size = size;\n\n  this.cells = [];\n\n  this.build();\n}\n\n// Build a grid of the specified size\nBoard.prototype.build = function () {\n  for (var x = 0; x < this.size; x++) {\n    var row = this.cells[x] = [];\n\n    for (var y = 0; y < this.size; y++) {\n      row.push(null);\n    }\n  }\n};\n\n// Find the first available random position\nBoard.prototype.randomAvailableCell = function () {\n  var cells = this.availableCells();\n\n  if (cells.length) {\n    return cells[Math.floor(this.rng.next() * cells.length)];\n  }\n};\n\nBoard.prototype.availableCells = function () {\n  var cells = [];\n\n  this.eachCell(function (x, y, tile) {\n    if (!tile) {\n      cells.push({ x: x, y: y });\n    }\n  });\n\n  return cells;\n};\n\n// Call callback for every cell\nBoard.prototype.eachCell = function (callback) {\n  for (var x = 0; x < this.size; x++) {\n    for (var y = 0; y < this.size; y++) {\n      callback(x, y, this.cells[x][y]);\n    }\n  }\n};\n\n// Check if there are any cells available\nBoard.prototype.cellsAvailable = function () {\n  return !!this.availableCells().length;\n};\n\n// Check if the specified cell is taken\nBoard.prototype.cellAvailable = function (cell) {\n  return !this.cellOccupied(cell);\n};\n\nBoard.prototype.cellOccupied = function (cell) {\n  return !!this.cellContent(cell);\n};\n\nBoard.prototype.cellContent = function (cell) {\n  if (this.withinBounds(cell)) {\n    return this.cells[cell.x][cell.y];\n  } else {\n    return null;\n  }\n};\n\n// Inserts a tile at its position\nBoard.prototype.insertTile = function (tile) {\n  this.cells[tile.x][tile.y] = tile;\n};\n\nBoard.prototype.removeTile = function (tile) {\n  this.cells[tile.x][tile.y] = null;\n};\n\nBoard.prototype.withinBounds = function (position) {\n  return position.x >= 0 && position.x < this.size &&\n         position.y >= 0 && position.y < this.size;\n};\n\nfunction Tile(position, value, id) {\n  this.x                = position.x;\n  this.y                = position.y;\n  this.value            = value || 2;\n  this.id               = id;\n\n  this.previousPosition = null;\n  this.mergedFrom       = null; // Tracks tiles that merged together\n}\n\nTile.prototype.savePosition = function () {\n  this.previousPosition = { x: this.x, y: this.y };\n};\n\nTile.prototype.updatePosition = function (position) {\n  this.x = position.x;\n  this.y = position.y;\n};","import React, { useRef, useState } from \"react\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Score from '../components/Score';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport styles from './style.css';\nimport { GameManager } from '../components/GameManager';\n\nfunction getInitialGameManager(seed, size) {\n  return new GameManager(seed, size);\n}\n\nconst GridContainer = () => {\n  return (\n    <div class=\"grid-container\">\n      <div class=\"grid-row\">\n        <Cell className=\"grid-cell\"/>\n        <Cell className=\"grid-cell\"/>\n        <Cell className=\"grid-cell\"/>\n        <Cell className=\"grid-cell\"/>\n      </div>\n      <div class=\"grid-row\">\n        <Cell className=\"grid-cell\"/>\n        <Cell className=\"grid-cell\"/>\n        <Cell className=\"grid-cell\"/>\n        <Cell className=\"grid-cell\"/>\n      </div>\n      <div class=\"grid-row\">\n        <Cell className=\"grid-cell\"/>\n        <Cell className=\"grid-cell\"/>\n        <Cell className=\"grid-cell\"/>\n        <Cell className=\"grid-cell\"/>\n      </div>\n      <div class=\"grid-row\">\n        <div class=\"grid-cell\"></div>\n        <div class=\"grid-cell\"></div>\n        <div class=\"grid-cell\"></div>\n        <div class=\"grid-cell\"></div>\n      </div>\n    </div>\n  )\n}\n\nconst normalizePosition = (position) => {\n  return { x: position.x + 1, y: position.y + 1 };\n}\n\nconst positionClass = (position) => {\n  position = normalizePosition(position);\n  return \"tile-position-\" + position.x + \"-\" + position.y;\n}\n\nconst Cell = (props) => {\n  return (<div className={props.className}></div>)\n}\n\nconst addTile = (elements, tile) => {\n  var position  = tile.previousPosition || { x: tile.x, y: tile.y };\n  var posClass = positionClass(position);\n  var classes = [\"tile\", \"tile-\" + tile.value, posClass];\n\n  if (tile.previousPosition) {\n    // Make sure that the tile gets rendered in the previous position first\n    classes[2] = positionClass({ x: tile.x, y: tile.y });\n    /* self.applyClasses(element, classes); // Update the position */\n  } else if (tile.mergedFrom) {\n    classes.push(\"tile-merged\");\n    /* this.applyClasses(element, classes); */\n\n    // Render the tiles that merged\n    tile.mergedFrom.forEach(function (merged) {\n      addTile(elements, merged);\n    });\n  } else {\n    classes.push(\"tile-new\");\n    /* this.applyClasses(element, classes); */\n  }\n  elements.push({ classes: classes.join(' '), value : tile.value, id: tile.id });\n}\n\nconst mapkeys = { up: 0, down: 2, right: 1, left: 3}\n\nconst getElements = (gm) => {\n  var elements = [];\n  gm.grid.cells.forEach(function (column) {\n    column.forEach(function (cell) {\n      if (cell) {\n        addTile(elements, cell);\n      }\n    });\n  });\n  return elements;\n}\n\nconst Game = (props) => {\n  const gameManager = useRef(getInitialGameManager(Math.random(), props.size));\n  const [elements, setElements] = useState(getElements(gameManager.current));\n  const [msg, setMsg] = useState(null);\n  const move = (key) => {\n    var d = mapkeys[key];\n    var score = gameManager.current.score;\n    gameManager.current.move(d);\n    var newscore = gameManager.current.score;\n    var delta = newscore - score;\n    setElements(getElements(gameManager.current));\n    props.setScore({ score: newscore, delta: delta });\n    if (gameManager.current.over) {\n      setMsg('Game Over');\n    } else if (gameManager.current.won) {\n      setMsg('You Win!');\n    } else {\n      props.handleKey(key);\n    }\n  }\n  const restart = () => {\n    gameManager.current = getInitialGameManager(Math.random(), props.size);\n    setElements(getElements(gameManager.current));\n    props.setScore({ score: 0, delta: 0});\n    setMsg(null);\n    props.handleKey('');\n    props.newSession();\n    props.setSigned(null);\n  }\n  return (\n  <Grid container direction=\"row\"  justify=\"center\" alignItems=\"center\" style={{ width: '494px' }}>\n    <Grid item xs={9}>\n      <Typography variant='h2' style={{\n        fontFamily: \"Clear Sans, Helvetica Neue, Arial, sans-serif\",\n        fontWeight: 700 }}>2048</Typography>\n      <Typography style= {{\n        fontFamily: \"Clear Sans, Helvetica Neue, Arial, sans-serif\",\n      }}> Join the numbers and get to the <b>2048 tile</b>!</Typography>\n    </Grid>\n    <Grid item xs={3}>\n      <Score score={props.score} />\n    </Grid>\n    <Grid item>\n      <Paper style={{ width: '494px', height: '494px', padding: 12 }}>\n        <KeyboardEventHandler\n          handleKeys={['up', 'down', 'left', 'right']}\n          onKeyEvent={(key, e) => move(key)}\n        />\n        <GridContainer />\n        <div class=\"tile-container\"> {\n          elements.map(element =>\n            <div key={element.id} className={element.classes} style={{ color: (element.value>4)?'white':'#776E65'}}>{element.value}</div>\n          )\n        } </div>\n      </Paper>\n    </Grid>\n    <Grid style={{ marginTop: '12px' }}>\n      <Button\n        color='secondary'\n        onClick={restart}\n      >\n      restart\n      </Button>\n    </Grid>\n    { (msg === null)? <div></div>\n    : (\n      <Grid item style={{ height: 0 }}>\n        <Paper style={{\n          width: '494px',\n          height: '494px',\n          padding: 12,\n          position: 'relative',\n          top: '-542px',\n          opacity: 0.8,\n          zIndex: 100 }}>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ height: '370px' }}>\n            <Grid item>\n              <Typography variant='h5' style={{\n                fontFamily: \"Clear Sans, Helvetica Neue, Arial, sans-serif\",\n                fontWeight: 700 }}>{msg}</Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>)\n    }\n    <Grid item>\n      <Typography style={{\n        fontFamily: \"Clear Sans, Helvetica Neue, Arial, sans-serif\",\n      }}><b>HOW TO PLAY</b>: Use your <b>arrow keys</b> to move the tiles. When two tiles with the same number touch,\n        they <b>merge into one!</b></Typography>\n    </Grid>\n    <Grid item xs={12} style={{ paddingTop: '20px', paddingBottom: '20px' }}>\n      <Divider/>\n    </Grid>\n    <Grid item>\n      <Typography style={{\n        fontFamily: \"Clear Sans, Helvetica Neue, Arial, sans-serif\",\n      }}>Created by Gabriele Cirulli. Based on 1024 by Veewo Studio and conceptually similar to Threes by Asher Vollmer.</Typography>\n    </Grid>\n  </Grid>\n  )\n}\n\nexport default Game;","export const  contractAddress = \"KT1JYjQhtL2Q4rzJsyYAMsLT2mEhFmA1rhY1\"\n\nexport const githubUrl = \"https://github.com/edukera/completium-dapp-2048\"\n\nexport const appTitle = \"Win the 2048 competition!\"\n\nexport const network = \"carthagenet\"\n\nexport const appName = \"GameCorp.\"\n","import React from 'react';\nimport constate from 'constate';\nimport { ThanosWallet } from '@thanos-wallet/dapp';\n\nexport const [\n  DAppProvider,\n  useWallet,\n  useTezos,\n  useAccountPkh,\n  useReady,\n  useConnect,\n] = constate(\n  useDApp,\n  (v) => v.wallet,\n  (v) => v.tezos,\n  (v) => v.accountPkh,\n  (v) => v.ready,\n  (v) => v.connect\n);\n\nfunction useDApp({ appName }) {\n  const [{ wallet, tezos, accountPkh }, setState] = React.useState(() => ({\n    wallet: null,\n    tezos: null,\n    accountPkh: null,\n  }));\n\n  const ready = Boolean(tezos);\n\n  React.useEffect(() => {\n    return ThanosWallet.onAvailabilityChange((available) => {\n      setState({\n        wallet: available ? new ThanosWallet(appName) : null,\n        tezos: null,\n        accountPkh: null,\n      });\n    });\n  }, [setState, appName]);\n\n  const connect = React.useCallback(\n    async (network, opts) => {\n      try {\n        if (!wallet) {\n          throw new Error('Thanos Wallet not available');\n        }\n        await wallet.connect(network, opts);\n        const tzs = wallet.toTezos();\n        const pkh = await tzs.wallet.pkh();\n        setState({\n          wallet,\n          tezos: tzs,\n          accountPkh: pkh,\n        });\n      } catch (err) {\n        alert(`Failed to connect ThanosWallet: ${err.message}`);\n      }\n    },\n    [setState, wallet]\n  );\n\n  return {\n    wallet,\n    tezos,\n    accountPkh,\n    ready,\n    connect,\n  };\n}\n\nexport function useOnBlock(tezos, callback) {\n  const blockHashRef = React.useRef();\n\n  React.useEffect(() => {\n    let sub;\n    spawnSub();\n    return () => sub.close();\n\n    function spawnSub() {\n      sub = tezos.stream.subscribe('head');\n\n      sub.on('data', (hash) => {\n        if (blockHashRef.current && blockHashRef.current !== hash) {\n          callback(hash);\n        }\n        blockHashRef.current = hash;\n      });\n      sub.on('error', (err) => {\n        if (process.env.NODE_ENV === 'development') {\n          console.error(err);\n        }\n        sub.close();\n        spawnSub();\n      });\n    }\n  }, [tezos, callback]);\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport '../index.css';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport { useReady, useWallet } from '../dapp';\n\nconst HeaderBar = (props) => {\n  const ready = useReady();\n  const wallet = useWallet();\n  const minWidth = useMediaQuery('(min-width:600px)');\n  var visible = minWidth?'visible':'hidden';\n  var dark = props.theme.palette.type === 'dark';\n  return (\n    <AppBar position=\"static\" color={dark?\"default\":\"secondary\"} style={{\n      boxShadow: \"none\",\n      opacity: 1,\n    }}>\n      <Toolbar>\n        <Typography variant=\"h6\" style={{ color: 'white', position: 'absolute', fontFamily : 'Alegreya Sans SC, sans-serif' }}>\n          Completium\n        </Typography>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h6\" style={{\n              visibility: visible,\n              textAlign: 'center',\n              color: 'white'\n              }}>\n              {props.appTitle}\n            </Typography>\n          </Grid>\n        </Grid>\n        { ready? (\n            <div></div>\n          ): (wallet? (\n            <Button variant=\"contained\" color=\"secondary\"\n              disableElevation\n              size=\"small\"\n              style={{ position: 'absolute', right: '1%' }}\n              onClick={props.handleConnect}>\n              connect to wallet\n            </Button>\n          ):(\n            <Link href=\"https://thanoswallet.com/\" rel=\"noopener\" underline=\"none\" style={{\n              position: 'absolute',\n              right: '1%'\n            }}>\n              <Button variant=\"contained\" size=\"small\" disableElevation\n                style={{\n                  backgroundColor: '#ed8936',\n                  color: 'white',\n                  fontWeight: 'bold',\n                   }}>\n                Install Thanos\n              </Button>\n            </Link>\n          ))}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default HeaderBar","\nimport React from 'react';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport Grid from '@material-ui/core/Grid';\n\nconst iconMap = {\n  'up'   : <ArrowUpwardIcon color='disabled'/>,\n  'down' : <ArrowDownwardIcon color='disabled'/>,\n  'left' : <ArrowBack color='disabled'/>,\n  'right': <ArrowForward color='disabled'/>\n}\n\nconst Actions = (props) => {\n  return (\n    <div>\n      <Grid container wrap='nowrap' direction=\"row-reverse\" justify=\"flex-end\" alignItems=\"center\" style={{ height: 55, paddingLeft: 5 }}>\n        { props.arrows.map(a => <Grid item style={{ marginTop: 10, marginLeft: 5 }}> {iconMap[a]} </Grid>) }\n      </Grid>\n    </div>)\n}\n\nexport default Actions;","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Divider, LinearProgress } from '@material-ui/core';\nimport { useReady, useAccountPkh, useTezos } from '../dapp.js';\nimport { InMemorySigner } from '@taquito/signer';\nimport { contractAddress } from '../settings.js';\nimport { Tezos } from '@taquito/taquito';\n\nimport Actions from './Actions';\n\nimport useWindowDimensions from './WindowDimensions';\n\nconst fromHexString = hexString =>\n  new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\nconst toHexString = bytes =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n\nconst Encrypt = (props) => {\n  const ready = useReady();\n  const tezos = useTezos();\n  const accountAddress = useAccountPkh();\n  const handleEncrypt = () => {\n    var oracle = new InMemorySigner('edsk3eFocAKYDy2GfkFXFnj19ocDFwJ4M4cvrPURgaeyWp19LFzvHE');\n    var nonce = new Uint8Array(8);\n    window.crypto.getRandomValues(nonce);\n    console.log(`score: ${props.score.score}`);\n    Tezos.setProvider({ rpc: 'https://testnet-tezos.giganode.io/' });\n    Tezos.rpc.packData({\n      data: {\n        prim: \"Pair\",\n        args: [\n          { string: accountAddress },\n          { int: props.score.score.toString() }\n        ]\n      }, type: {\n        prim: \"pair\",\n        args: [\n          { prim: \"address\" },\n          { prim: \"nat\" }\n        ]\n      }\n    }).then(wrappedPacked => {\n      const hexScore = wrappedPacked.packed;\n      oracle.sign(hexScore).then(s => {\n        console.log(`score: ${props.score.score.toString(16)}`);\n        console.log(`signed: ${s.sbytes}`);\n        console.log(`sig: ${s.sig}`);\n        console.log(`prefix: ${s.prefixSig}`);\n        props.setSigned({ packed: wrappedPacked.packed, value: s.prefixSig });\n      });\n    })\n  }\n  const submit = () => {\n    tezos.wallet.at(contractAddress).then(contract => {\n      contract.methods.submit(props.signed.packed, props.signed.value).send().then(op => {\n        props.openSnack();\n        op.receipt().then(() => {\n          props.closeSnack();\n          props.loadRecords();\n        });\n      }).catch(e => console.log(e));\n    });\n  }\n  if (props.signed.value === null) {\n    return (\n      <Grid item style={{ marginTop: 30, marginBottom: 30 }}>\n        <Button\n          variant='contained'\n          color='secondary'\n          disableElevation\n          onClick={handleEncrypt}\n          disabled={!ready || props.score.score < 16 }\n        >\n          compute & encrypt score\n      </Button>\n      </Grid>);\n  } else {\n    return (\n      <Grid item>\n        <Grid container=\"column\" justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <Typography style={{\n              paddingTop: 30,\n              paddingBottom: 6,\n              fontFamily: 'Courier Prime, monospace'\n            }}>{props.signed.value.substring(0, 50) + '...'}</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              variant='contained'\n              color='secondary'\n              disableElevation\n              disabled={!ready || props.status === 0}\n              onClick={submit}\n            >\n              submit\n          </Button>\n          </Grid>\n        </Grid>\n      </Grid>);\n  }\n}\n\nconst LeaderBoard = (props) => {\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{\n      height: props.height,\n      overflow: 'scroll'\n    }}>\n      <Grid item xs={2} style={{\n        paddingLeft: 20,\n        fontWeight: 700,\n        textAlign: 'center'\n      }}><Typography color='textSecondary'>Rank</Typography></Grid>\n      <Grid item xs={2} style={{\n        paddingLeft: 10,\n        fontWeight: 700\n      }}><Typography color='textSecondary'>Score</Typography></Grid>\n      <Grid item xs={8} style={{\n        paddingLeft: 10,\n        fontWeight: 700,\n        textAlign: 'center'\n      }}><Typography color='textSecondary'>Account</Typography></Grid>\n      <Grid item xs={12}> {\n        props.records.map(record =>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{\n            padding: 12,\n            paddingLeft: 0,\n            paddingRight: 0\n          }}>\n            <Grid item xs={2}>\n              <Typography style={{ textAlign: 'center' }}>#{record.rank}</Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <Typography style={{ marginRight: 10 }}>{record.score}</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <Typography style={{\n                fontFamily: 'Courier Prime, monospace'\n              }}>{record.account}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Divider></Divider>\n            </Grid>\n          </Grid>)}\n      </Grid>\n    </Grid>\n  )\n}\n\nconst Competition = (props) => {\n  const ready = useReady();\n  const address = useAccountPkh();\n  const { height, width } = useWindowDimensions();\n  const leaderBoardHeight = (height - 550) + 'px';\n  const leaderBoardWidth = (Math.floor(0.3 * width)) + 'px';\n  return (\n    <Paper elevation='0' square style={{ paddingTop: 10 }}>\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={2} style={{\n        paddingLeft: 15,\n        paddingTop: 15,\n        overflow: 'scroll'\n      }}>\n        <Grid item xs={3} style={{ padding: 10 }}>\n          <Typography color='textSecondary'>Account:</Typography>\n        </Grid>\n        <Grid item xs={9}>\n          {(ready) ? (<Typography style={{\n            fontFamily: 'Courier Prime, monospace'\n          }}>{address}\n          </Typography>\n          ) : (\n              <div></div>\n            )\n          }\n        </Grid>\n        <Grid item xs={3} style={{ padding: 10 }}>\n          <Typography color='textSecondary'>Session id:</Typography>\n        </Grid>\n        <Grid item xs={9}>\n          <Typography style={{\n            fontFamily: 'Courier Prime, monospace'\n          }}>{props.session}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={{\n        marginTop: 20,\n        backgroundImage: \"url(\" + process.env.PUBLIC_URL + '/podium.svg)',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'right 50% top 240px',\n      }}>\n        <Grid item>\n          <Typography color='textSecondary' style={{ fontWeight: 700, padding: 10 }}>Session actions</Typography>\n        </Grid>\n        <Grid item style={{ width: '100%' }}>\n          <Divider></Divider>\n        </Grid>\n        <Grid item style={{ width: '100%', overflow: 'hidden' }}>\n          <Actions arrows={props.arrows} />\n        </Grid>\n        <Grid item style={{ width: '100%' }}>\n          <Divider></Divider>\n        </Grid>\n        <Grid item>\n          <Typography color='textSecondary'>{props.arrows.length}</Typography>\n        </Grid>\n        <Encrypt\n          signed={props.signed}\n          setSigned={props.setSigned}\n          score={props.score}\n          signed={props.signed}\n          openSnack={props.openSnack}\n          closeSnack={props.closeSnack}\n          loadRecords={props.loadRecords}\n          status={props.status}\n        />\n        <Grid item>\n          <Typography color='secondary' style={{\n            fontWeight: 700,\n            fontSize: 34,\n            marginTop: 30,\n            marginBottom: 80\n          }}>Leader Board\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          {(props.records === null) ? (\n            <div style={{ marginTop: 40, height: 40, width: leaderBoardWidth }}>\n              <LinearProgress color='secondary'></LinearProgress>\n            </div>\n          ) : (\n              <LeaderBoard height={leaderBoardHeight} records={props.records} />\n            )\n          }\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default Competition;","import Prando from \"prando\";\n\n/* key used to encode score; KEEP IT SECRET! */\nconst privateKey = '';\n\nexport function GameServer() {\n  this.seeds  = new Object();\n  this.rngs   = new Object();\n};\n\nGameServer.prototype.newSession = async function () {\n  var id = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n  // set seed\n  this.seeds[id]  = Math.random();\n  this.rngs[id]   = new Prando(this.seeds[id]);\n  return new Promise((resolve) => {\n    resolve(id);\n  });\n};\n\nGameServer.prototype.next = async function (id) {\n  return new Promise((resolve) => {\n    resolve(this.rngs[id].next());\n  })\n}","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst SnackMsg = (props) => {\n    return (\n      <Snackbar open={props.open} >\n        <Alert severity=\"info\" style={{\n            backgroundColor: props.theme.palette.secondary.main\n        }}>\n          Waiting for operation confirmation ...\n        </Alert>\n      </Snackbar>)\n}\n\nexport default SnackMsg","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport Game from './game/Game';\nimport { appTitle, appName, contractAddress, network } from './settings.js';\nimport HeaderBar from './components/HeaderBar';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Competition from './components/Competition';\nimport { GameServer } from './server/GameServer';\nimport { Tezos } from '@taquito/taquito';\nimport { DAppProvider, useConnect } from './dapp.js';\nimport SnackMsg from './components/SnackMsg';\n\nfunction App() {\n  return (\n    <DAppProvider appName={appName}>\n      <React.Suspense fallback={null}>\n        <PageRouter />\n      </React.Suspense>\n    </DAppProvider>\n  );\n}\n\nfunction sortByScore(records) {\n  records.sort((a, b) => {\n    return b.score - a.score;\n  });\n  return records.map((x, i) => { return { rank: i+1, score: x.score, account: x.account }});\n}\n\nconst PageRouter = (props) => {\n  var connect = useConnect();\n  const prefersDarkMode = false; /*useMediaQuery('(prefers-color-scheme: dark)');*/\n  const [arrows, setArrows] = useState([]);\n  const [session, setSession] = useState(null);\n  const [records, setRecords] = useState(null);\n  const [status, setStatus] = useState(0);\n  const [signed, setSigned] = useState({ packed: null, value: null});\n  const [score, setScore] = useState({ score: 0, delta: 0});\n  const [viewSnack, setViewSnack] = React.useState(false);\n  const GameServerRef = useRef(new GameServer());\n  const handleKey = (key) => {\n    var a = [...arrows];\n    if (key === '') {\n      a = [];\n    } else {\n      a.push(key);\n    }\n    setArrows(a);\n  }\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          secondary: {\n            light: '#fd7b52',\n            main: '#ff5722',\n            dark: '#b32b00',\n            contrastText: '#fff',\n          }\n        },\n      }),\n    [prefersDarkMode],\n  );\n  const handleConnect = React.useCallback(async () => {\n    try {\n      await connect(network);\n    } catch (err) {\n      alert(err.message);\n    };\n  }, [connect]);\n  async function newSession() {\n    var id = await GameServerRef.current.newSession()\n    setSession(id);\n  }\n  if (session === null) {\n    newSession();\n  }\n  async function loadRecords() {\n    try {\n      Tezos.setProvider({rpc: 'https://testnet-tezos.giganode.io/'});\n      console.log(contractAddress);\n      var contract  = await Tezos.contract.at(contractAddress);\n      var cstorage  = await contract.storage();\n      var recs      = [];\n      cstorage.submission.forEach((s, k, m) => {\n        recs.push({\n          score: parseInt('0'+s.score),\n          account: k\n        });\n      });\n      setRecords(sortByScore(recs));\n      setStatus(parseInt('0'+cstorage._state));\n    } catch (error) {\n      console.log(`Error: ${error}`);\n    }\n  }\n  if (records === null) {\n    loadRecords();\n  }\n  const openSnack = () => {\n    setViewSnack(true);\n  }\n  const closeSnack = () => {\n    setViewSnack(false);\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <HeaderBar appTitle={appTitle} handleConnect={handleConnect} theme={theme}/>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" style={{ width: '99%' }} >\n        <Grid item xs={8}>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item>\n              <Game\n                size={4}\n                handleKey={handleKey}\n                newSession={newSession}\n                next={GameServerRef.current.next}\n                setSigned={setSigned}\n                setScore={setScore}\n                score={score}\n                signed={signed}\n                loadRecords={loadRecords}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={4}>\n          <Competition\n            arrows={arrows}\n            session={session}\n            records={records}\n            signed={signed}\n            setSigned={setSigned}\n            score={score}\n            openSnack={openSnack}\n            closeSnack={closeSnack}\n            loadRecords={loadRecords}\n            status={status}\n          />\n        </Grid>\n      </Grid>\n      <SnackMsg open={viewSnack} theme={theme} />\n    </ThemeProvider>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}